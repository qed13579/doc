import{_ as n,e as s}from"./app.8de1a9ea.js";const a={},p=s(`<h1 id="_07-\u3010nodejs\u5185\u7F6E\u6A21\u5757-\u4E0B-\u3011" tabindex="-1"><a class="header-anchor" href="#_07-\u3010nodejs\u5185\u7F6E\u6A21\u5757-\u4E0B-\u3011" aria-hidden="true">#</a> 07 \u3010nodejs\u5185\u7F6E\u6A21\u5757\uFF08\u4E0B\uFF09\u3011</h1><h2 id="_1-stream-\u6A21\u5757" tabindex="-1"><a class="header-anchor" href="#_1-stream-\u6A21\u5757" aria-hidden="true">#</a> 1.stream \u6A21\u5757</h2><p><code>stream</code>\u662FNode.js\u63D0\u4F9B\u7684\u53C8\u4E00\u4E2A\u4EC5\u5728\u670D\u52A1\u533A\u7AEF\u53EF\u7528\u7684\u6A21\u5757\uFF0C\u76EE\u7684\u662F\u652F\u6301\u201C\u6D41\u201D\u8FD9\u79CD\u6570\u636E\u7ED3\u6784\u3002</p><p>\u4EC0\u4E48\u662F\u6D41\uFF1F\u6D41\u662F\u4E00\u79CD\u62BD\u8C61\u7684\u6570\u636E\u7ED3\u6784\u3002\u60F3\u8C61\u6C34\u6D41\uFF0C\u5F53\u5728\u6C34\u7BA1\u4E2D\u6D41\u52A8\u65F6\uFF0C\u5C31\u53EF\u4EE5\u4ECE\u67D0\u4E2A\u5730\u65B9\uFF08\u4F8B\u5982\u81EA\u6765\u6C34\u5382\uFF09\u6E90\u6E90\u4E0D\u65AD\u5730\u5230\u8FBE\u53E6\u4E00\u4E2A\u5730\u65B9\uFF08\u6BD4\u5982\u4F60\u5BB6\u7684\u6D17\u624B\u6C60\uFF09\u3002\u6211\u4EEC\u4E5F\u53EF\u4EE5\u628A\u6570\u636E\u770B\u6210\u662F\u6570\u636E\u6D41\uFF0C\u6BD4\u5982\u4F60\u6572\u952E\u76D8\u7684\u65F6\u5019\uFF0C\u5C31\u53EF\u4EE5\u628A\u6BCF\u4E2A\u5B57\u7B26\u4F9D\u6B21\u8FDE\u8D77\u6765\uFF0C\u770B\u6210\u5B57\u7B26\u6D41\u3002\u8FD9\u4E2A\u6D41\u662F\u4ECE\u952E\u76D8\u8F93\u5165\u5230\u5E94\u7528\u7A0B\u5E8F\uFF0C\u5B9E\u9645\u4E0A\u5B83\u8FD8\u5BF9\u5E94\u7740\u4E00\u4E2A\u540D\u5B57\uFF1A\u6807\u51C6\u8F93\u5165\u6D41\uFF08stdin\uFF09\u3002</p><p>\u5982\u679C\u5E94\u7528\u7A0B\u5E8F\u628A\u5B57\u7B26\u4E00\u4E2A\u4E00\u4E2A\u8F93\u51FA\u5230\u663E\u793A\u5668\u4E0A\uFF0C\u8FD9\u4E5F\u53EF\u4EE5\u770B\u6210\u662F\u4E00\u4E2A\u6D41\uFF0C\u8FD9\u4E2A\u6D41\u4E5F\u6709\u540D\u5B57\uFF1A\u6807\u51C6\u8F93\u51FA\u6D41\uFF08stdout\uFF09\u3002\u6D41\u7684\u7279\u70B9\u662F\u6570\u636E\u662F\u6709\u5E8F\u7684\uFF0C\u800C\u4E14\u5FC5\u987B\u4F9D\u6B21\u8BFB\u53D6\uFF0C\u6216\u8005\u4F9D\u6B21\u5199\u5165\uFF0C\u4E0D\u80FD\u50CFArray\u90A3\u6837\u968F\u673A\u5B9A\u4F4D\u3002</p><p>\u6709\u4E9B\u6D41\u7528\u6765\u8BFB\u53D6\u6570\u636E\uFF0C\u6BD4\u5982\u4ECE\u6587\u4EF6\u8BFB\u53D6\u6570\u636E\u65F6\uFF0C\u53EF\u4EE5\u6253\u5F00\u4E00\u4E2A\u6587\u4EF6\u6D41\uFF0C\u7136\u540E\u4ECE\u6587\u4EF6\u6D41\u4E2D\u4E0D\u65AD\u5730\u8BFB\u53D6\u6570\u636E\u3002\u6709\u4E9B\u6D41\u7528\u6765\u5199\u5165\u6570\u636E\uFF0C\u6BD4\u5982\u5411\u6587\u4EF6\u5199\u5165\u6570\u636E\u65F6\uFF0C\u53EA\u9700\u8981\u628A\u6570\u636E\u4E0D\u65AD\u5730\u5F80\u6587\u4EF6\u6D41\u4E2D\u5199\u8FDB\u53BB\u5C31\u53EF\u4EE5\u4E86\u3002</p><p>\u5728Node.js\u4E2D\uFF0C\u6D41\u4E5F\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u54CD\u5E94\u6D41\u7684\u4E8B\u4EF6\u5C31\u53EF\u4EE5\u4E86\uFF1A<code>data</code>\u4E8B\u4EF6\u8868\u793A\u6D41\u7684\u6570\u636E\u5DF2\u7ECF\u53EF\u4EE5\u8BFB\u53D6\u4E86\uFF0C<code>end</code>\u4E8B\u4EF6\u8868\u793A\u8FD9\u4E2A\u6D41\u5DF2\u7ECF\u5230\u672B\u5C3E\u4E86\uFF0C\u6CA1\u6709\u6570\u636E\u53EF\u4EE5\u8BFB\u53D6\u4E86\uFF0C<code>error</code>\u4E8B\u4EF6\u8868\u793A\u51FA\u9519\u4E86\u3002</p><h3 id="_1-1-\u8BFB\u53D6\u6D41" tabindex="-1"><a class="header-anchor" href="#_1-1-\u8BFB\u53D6\u6D41" aria-hidden="true">#</a> 1.1 \u8BFB\u53D6\u6D41</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u521B\u5EFA\u8BFB\u53D6\u6D41</span>
<span class="token keyword">let</span> rs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;hello.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BFB\u53D6\u7684\u6587\u4EF6\u5DF2\u6253\u5F00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BFB\u53D6\u6D41\u7ED3\u675F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//\u6BCF\u4E00\u6279\u6570\u636E\u6D41\u5165\u5B8C\u6210</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5355\u6279\u6570\u636E\u6D41\u5165:&#39;</span> <span class="token operator">+</span> chunk<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><p>\u8981\u6CE8\u610F\uFF0C<code>data</code>\u4E8B\u4EF6\u53EF\u80FD\u4F1A\u6709\u591A\u6B21\uFF0C\u6BCF\u6B21\u4F20\u9012\u7684<code>chunk</code>\u662F\u6D41\u7684\u4E00\u90E8\u5206\u6570\u636E\u3002</p><p><strong>\u8BFB\u53D6\u89C6\u9891</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u521B\u5EFA\u8BFB\u53D6\u6D41</span>
<span class="token keyword">let</span> rs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;video.mp4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u6BCF\u4E00\u6279\u6570\u636E\u6D41\u5165\u5B8C\u6210</span>
rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5355\u6279\u6570\u636E\u6D41\u5165:&#39;</span> <span class="token operator">+</span> chunk<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>chunk<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eigfl898j31750iztjs.jpg" alt=""></p><h3 id="_1-2-\u5199\u5165\u6D41" tabindex="-1"><a class="header-anchor" href="#_1-2-\u5199\u5165\u6D41" aria-hidden="true">#</a> 1.2 \u5199\u5165\u6D41</h3><p>\u8981\u4EE5\u6D41\u7684\u5F62\u5F0F\u5199\u5165\u6587\u4EF6\uFF0C\u53EA\u9700\u8981\u4E0D\u65AD\u8C03\u7528<code>write()</code>\u65B9\u6CD5\uFF0C\u6700\u540E\u4EE5<code>end()</code>\u7ED3\u675F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u521B\u5EFA\u5199\u5165\u6D41</span>
<span class="token keyword">let</span> ws <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;hello.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf-8&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u76D1\u542C\u6587\u4EF6\u6253\u5F00\u4E8B\u4EF6</span>
ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6587\u4EF6\u6253\u5F00&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u76D1\u542C\u6587\u4EF6\u5173\u95ED\u4E8B\u4EF6</span>
ws<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6587\u4EF6\u5199\u5165\u5B8C\u6210\uFF0C\u5173\u95ED&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u6587\u4EF6\u6D41\u5F0F\u5199\u5165</span>
ws<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;helloworld1!&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5185\u5BB91\u6D41\u5165\u5B8C\u6210&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ws<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&#39;helloworld2!&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5185\u5BB92\u6D41\u5165\u5B8C\u6210&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u6587\u4EF6\u5199\u5165\u5B8C\u6210</span>
ws<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6587\u4EF6\u5199\u5165\u5173\u95ED&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><p><code>pipe</code> \u5C31\u50CF\u53EF\u4EE5\u628A\u4E24\u4E2A\u6C34\u7BA1\u4E32\u6210\u4E00\u4E2A\u66F4\u957F\u7684\u6C34\u7BA1\u4E00\u6837\uFF0C\u4E24\u4E2A\u6D41\u4E5F\u53EF\u4EE5\u4E32\u8D77\u6765\u3002\u4E00\u4E2A<code>Readable</code>\u6D41\u548C\u4E00\u4E2A<code>Writable</code>\u6D41\u4E32\u8D77\u6765\u540E\uFF0C\u6240\u6709\u7684\u6570\u636E\u81EA\u52A8\u4ECE<code>Readable</code>\u6D41\u8FDB\u5165<code>Writable</code>\u6D41\uFF0C\u8FD9\u79CD\u64CD\u4F5C\u53EB<code>pipe</code>\u3002</p><p>\u5728Node.js\u4E2D\uFF0C<code>Readable</code>\u6D41\u6709\u4E00\u4E2A<code>pipe()</code>\u65B9\u6CD5\uFF0C\u5C31\u662F\u7528\u6765\u5E72\u8FD9\u4EF6\u4E8B\u7684\u3002</p><p>\u8BA9\u6211\u4EEC\u7528<code>pipe()</code>\u628A\u4E00\u4E2A\u6587\u4EF6\u6D41\u548C\u53E6\u4E00\u4E2A\u6587\u4EF6\u6D41\u4E32\u8D77\u6765\uFF0C\u8FD9\u6837\u6E90\u6587\u4EF6\u7684\u6240\u6709\u6570\u636E\u5C31\u81EA\u52A8\u5199\u5165\u5230\u76EE\u6807\u6587\u4EF6\u91CC\u4E86\uFF0C\u6240\u4EE5\uFF0C\u8FD9\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u590D\u5236\u6587\u4EF6\u7684\u7A0B\u5E8F\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u521B\u5EFA\u8BFB\u53D6\u6D41</span>
<span class="token keyword">let</span> rs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;video.mp4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> ws <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;b.mp4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BFB\u53D6\u6D41\u7ED3\u675F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>ws<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p><strong>pipe\u539F\u7406</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u521B\u5EFA\u8BFB\u53D6\u6D41</span>
<span class="token keyword">let</span> rs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;video.mp4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> ws <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;b.mp4&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  ws<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u8BFB\u53D6\u6D41\u7ED3\u675F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u6BCF\u4E00\u6279\u6570\u636E\u6D41\u5165\u5B8C\u6210</span>
rs<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;data&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">chunk</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5355\u6279\u6570\u636E\u6D41\u5165:&#39;</span> <span class="token operator">+</span> chunk<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span>
  ws<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>chunk<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5355\u6279\u8F93\u5165\u6D41\u5165\u5B8C\u6210&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="_2-\u8D44\u6E90\u538B\u7F29\u6A21\u5757-zib" tabindex="-1"><a class="header-anchor" href="#_2-\u8D44\u6E90\u538B\u7F29\u6A21\u5757-zib" aria-hidden="true">#</a> 2.\u8D44\u6E90\u538B\u7F29\u6A21\u5757 zib</h2><h3 id="_2-1-\u6982\u89C8" tabindex="-1"><a class="header-anchor" href="#_2-1-\u6982\u89C8" aria-hidden="true">#</a> 2.1 \u6982\u89C8</h3><p>\u505A\u8FC7web\u6027\u80FD\u4F18\u5316\u7684\u540C\u5B66\uFF0C\u5BF9\u6027\u80FD\u4F18\u5316\u5927\u6740\u5668<strong>gzip</strong>\u5E94\u8BE5\u4E0D\u964C\u751F\u3002\u6D4F\u89C8\u5668\u5411\u670D\u52A1\u5668\u53D1\u8D77\u8D44\u6E90\u8BF7\u6C42\uFF0C\u6BD4\u5982\u4E0B\u8F7D\u4E00\u4E2Ajs\u6587\u4EF6\uFF0C\u670D\u52A1\u5668\u5148\u5BF9\u8D44\u6E90\u8FDB\u884C\u538B\u7F29\uFF0C\u518D\u8FD4\u56DE\u7ED9\u6D4F\u89C8\u5668\uFF0C\u4EE5\u6B64\u8282\u7701\u6D41\u91CF\uFF0C\u52A0\u5FEB\u8BBF\u95EE\u901F\u5EA6\u3002</p><p>\u6D4F\u89C8\u5668\u901A\u8FC7HTTP\u8BF7\u6C42\u5934\u90E8\u91CC\u52A0\u4E0A<strong>Accept-Encoding</strong>\uFF0C\u544A\u8BC9\u670D\u52A1\u5668\uFF0C\u201C\u4F60\u53EF\u4EE5\u7528gzip\uFF0C\u6216\u8005defalte\u7B97\u6CD5\u538B\u7F29\u8D44\u6E90\u201D\u3002</p><blockquote><p>Accept-Encoding:gzip, deflate</p></blockquote><p>\u90A3\u4E48\uFF0C\u5728nodejs\u91CC\uFF0C\u662F\u5982\u4F55\u5BF9\u8D44\u6E90\u8FDB\u884C\u538B\u7F29\u7684\u5462\uFF1F\u7B54\u6848\u5C31\u662F<strong>Zlib</strong>\u6A21\u5757\u3002=</p><h3 id="_2-2-\u538B\u7F29\u7684\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_2-2-\u538B\u7F29\u7684\u4F8B\u5B50" aria-hidden="true">#</a> 2.2 \u538B\u7F29\u7684\u4F8B\u5B50</h3><p>\u975E\u5E38\u7B80\u5355\u7684\u51E0\u884C\u4EE3\u7801\uFF0C\u5C31\u5B8C\u6210\u4E86\u672C\u5730\u6587\u4EF6\u7684gzip\u538B\u7F29\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> zlib <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zlib&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> gzip <span class="token operator">=</span> zlib<span class="token punctuation">.</span><span class="token function">createGzip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> readstream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;./extra/fileForCompress.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> writestream <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;./extra/fileForCompress.txt.gz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

readstream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gzip<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writestream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_2-3-\u89E3\u538B\u7684\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_2-3-\u89E3\u538B\u7684\u4F8B\u5B50" aria-hidden="true">#</a> 2.3 \u89E3\u538B\u7684\u4F8B\u5B50</h3><p>\u540C\u6837\u975E\u5E38\u7B80\u5355\uFF0C\u5C31\u662F\u4E2A\u53CD\u5411\u64CD\u4F5C\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> zlib <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zlib&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> gunzip <span class="token operator">=</span> zlib<span class="token punctuation">.</span><span class="token function">createGunzip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> readstream  <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;./extra/fileForCompress.txt.gz&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> writestream  <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createWriteStream</span><span class="token punctuation">(</span><span class="token string">&#39;./extra/fileForCompress1.txt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

readstream<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gunzip<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>writestream<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div><h3 id="_2-4-\u670D\u52A1\u7AEFgzip\u538B\u7F29" tabindex="-1"><a class="header-anchor" href="#_2-4-\u670D\u52A1\u7AEFgzip\u538B\u7F29" aria-hidden="true">#</a> 2.4 \u670D\u52A1\u7AEFgzip\u538B\u7F29</h3><p>\u9996\u5148\u5224\u65AD \u662F\u5426\u5305\u542B <strong>accept-encoding</strong> \u9996\u90E8\uFF0C\u4E14\u503C\u4E3A<strong>gzip</strong>\u3002</p><ul><li>\u5426\uFF1A\u8FD4\u56DE\u672A\u538B\u7F29\u7684\u6587\u4EF6\u3002</li><li>\u662F\uFF1A\u8FD4\u56DEgzip\u538B\u7F29\u540E\u7684\u6587\u4EF6\u3002</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> zlib <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zlib&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> filepath <span class="token operator">=</span> <span class="token string">&#39;./extra/fileForGzip.html&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> acceptEncoding <span class="token operator">=</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;accept-encoding&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> gzip<span class="token punctuation">;</span>
    
    <span class="token keyword">if</span><span class="token punctuation">(</span>acceptEncoding<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;gzip&#39;</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// \u5224\u65AD\u662F\u5426\u9700\u8981gzip\u538B\u7F29</span>
        
        gzip <span class="token operator">=</span> zlib<span class="token punctuation">.</span><span class="token function">createGzip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token comment">// \u8BB0\u5F97\u54CD\u5E94 Content-Encoding\uFF0C\u544A\u8BC9\u6D4F\u89C8\u5668\uFF1A\u6587\u4EF6\u88AB gzip \u538B\u7F29\u8FC7</span>
        res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;Content-Encoding&#39;</span><span class="token operator">:</span> <span class="token string">&#39;gzip&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gzip<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>

        fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&#39;3000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p><strong>\u5C06js\u5927\u6587\u4EF6\u8FD4\u56DE</strong></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> zlib <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zlib&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//\u8FD9\u4E24\u4E2A\u8981\u5199\u5728fs\u6A21\u5757\u540E\u9762</span>
<span class="token keyword">const</span> gzip <span class="token operator">=</span> zlib<span class="token punctuation">.</span><span class="token function">createGzip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

http
  <span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> rs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;hello.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;Content-Type&#39;</span><span class="token operator">:</span> <span class="token string">&#39;application/x-javascript;charset=utf-8&#39;</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;Content-Encoding&#39;</span><span class="token operator">:</span> <span class="token string">&#39;gzip&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    rs<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>gzip<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;server start&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_2-5-\u670D\u52A1\u7AEF\u5B57\u7B26\u4E32gzip\u538B\u7F29" tabindex="-1"><a class="header-anchor" href="#_2-5-\u670D\u52A1\u7AEF\u5B57\u7B26\u4E32gzip\u538B\u7F29" aria-hidden="true">#</a> 2.5 \u670D\u52A1\u7AEF\u5B57\u7B26\u4E32gzip\u538B\u7F29</h3><p>\u4EE3\u7801\u8DDF\u524D\u9762\u4F8B\u5B50\u5927\u540C\u5C0F\u5F02\u3002\u8FD9\u91CC\u91C7\u7528\u4E86 <strong>zlib.gzipSync(str)</strong> \u5BF9\u5B57\u7B26\u4E32\u8FDB\u884Cgzip\u538B\u7F29\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;http&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> zlib <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;zlib&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> responseText <span class="token operator">=</span> <span class="token string">&#39;hello world&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> acceptEncoding <span class="token operator">=</span> req<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;accept-encoding&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>acceptEncoding<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">&#39;gzip&#39;</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">writeHead</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&#39;content-encoding&#39;</span><span class="token operator">:</span> <span class="token string">&#39;gzip&#39;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>zlib<span class="token punctuation">.</span><span class="token function">gzipSync</span><span class="token punctuation">(</span>responseText<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
        res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token string">&#39;3000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_3-\u6570\u636E\u52A0\u5BC6\u6A21\u5757-crypto" tabindex="-1"><a class="header-anchor" href="#_3-\u6570\u636E\u52A0\u5BC6\u6A21\u5757-crypto" aria-hidden="true">#</a> 3.\u6570\u636E\u52A0\u5BC6\u6A21\u5757 crypto</h2><p>crypto\u6A21\u5757\u7684\u76EE\u7684\u662F\u4E3A\u4E86\u63D0\u4F9B\u901A\u7528\u7684\u52A0\u5BC6\u548C\u54C8\u5E0C\u7B97\u6CD5\u3002\u7528\u7EAFJavaScript\u4EE3\u7801\u5B9E\u73B0\u8FD9\u4E9B\u529F\u80FD\u4E0D\u662F\u4E0D\u53EF\u80FD\uFF0C\u4F46\u901F\u5EA6\u4F1A\u975E\u5E38\u6162\u3002Nodejs\u7528C/C++\u5B9E\u73B0\u8FD9\u4E9B\u7B97\u6CD5\u540E\uFF0C\u901A\u8FC7cypto\u8FD9\u4E2A\u6A21\u5757\u66B4\u9732\u4E3AJavaScript\u63A5\u53E3\uFF0C\u8FD9\u6837\u7528\u8D77\u6765\u65B9\u4FBF\uFF0C\u8FD0\u884C\u901F\u5EA6\u4E5F\u5FEB\u3002</p><h3 id="_3-1-hash\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_3-1-hash\u4F8B\u5B50" aria-hidden="true">#</a> 3.1 hash\u4F8B\u5B50</h3><p>hash.digest([encoding])\uFF1A\u8BA1\u7B97\u6458\u8981\u3002encoding\u53EF\u4EE5\u662F<code>hex</code>\u3001<code>latin1</code>\u6216\u8005<code>base64</code>\u3002\u5982\u679C\u58F0\u660E\u4E86encoding\uFF0C\u90A3\u4E48\u8FD4\u56DE\u5B57\u7B26\u4E32\u3002\u5426\u5219\uFF0C\u8FD4\u56DEBuffer\u5B9E\u4F8B\u3002\u6CE8\u610F\uFF0C\u8C03\u7528hash.digest()\u540E\uFF0Chash\u5BF9\u8C61\u5C31\u4F5C\u5E9F\u4E86\uFF0C\u518D\u6B21\u8C03\u7528\u5C31\u4F1A\u51FA\u9519\u3002</p><p>hash.update(data[, input_encoding])\uFF1Ainput_encoding\u53EF\u4EE5\u662F<code>utf8</code>\u3001<code>ascii</code>\u6216\u8005<code>latin1</code>\u3002\u5982\u679Cdata\u662F\u5B57\u7B26\u4E32\uFF0C\u4E14\u6CA1\u6709\u6307\u5B9A input_encoding\uFF0C\u5219\u9ED8\u8BA4\u662F<code>utf8</code>\u3002\u6CE8\u610F\uFF0Chash.update()\u65B9\u6CD5\u53EF\u4EE5\u8C03\u7528\u591A\u6B21\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> content <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> hash <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;sha256&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> output<span class="token punctuation">;</span>

hash<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>

output <span class="token operator">=</span> hash<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8F93\u51FA\u5185\u5BB9\u4E3A\uFF1A</span>
<span class="token comment">// b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u4E5F\u53EF\u4EE5\u8FD9\u6837\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> input <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> hash <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;sha256&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

hash<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

input<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>hash<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>

<span class="token comment">// \u8F93\u51FA\u5185\u5BB9\u4E3A\uFF1A</span>
<span class="token comment">// b94d27b9934d3e08a52e52d7da7dabfac484efe37a5380ee9088f7ace2efcde9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>hash.digest()\u540E\uFF0C\u518D\u6B21\u8C03\u7528digest()\u6216\u8005update()</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> content <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> hash <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;sha256&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> output<span class="token punctuation">;</span>

hash<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>
hash<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment">// \u62A5\u9519\uFF1AError: Digest already called</span>
hash<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u62A5\u9519\uFF1AError: Digest already called</span>
hash<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="_3-2-hmac\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_3-2-hmac\u4F8B\u5B50" aria-hidden="true">#</a> 3.2 HMAC\u4F8B\u5B50</h3><p>HMAC\u7684\u5168\u79F0\u662FHash-based Message Authentication Code\uFF0C\u4E5F\u5373\u5728hash\u7684\u52A0\u76D0\u8FD0\u7B97\u3002</p><p>\u5177\u4F53\u5230\u4F7F\u7528\u7684\u8BDD\uFF0C\u8DDFhash\u6A21\u5757\u5DEE\u4E0D\u591A\uFF0C\u9009\u5B9Ahash\u7B97\u6CD5\uFF0C\u6307\u5B9A\u201C\u76D0\u201D\u5373\u53EF\u3002</p><p>\u4F8B\u5B501\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> secret <span class="token operator">=</span> <span class="token string">&#39;secret&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> hmac <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHmac</span><span class="token punctuation">(</span><span class="token string">&#39;sha256&#39;</span><span class="token punctuation">,</span> secret<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> input <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

hmac<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> hmac<span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8F93\u51FA\uFF1A</span>
<span class="token comment">// 734cc62f32841568f45715aeb9f4d7891324e6d948e4c6c60c0621cdac48623a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u4F8B\u5B502\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> secret <span class="token operator">=</span> <span class="token string">&#39;secret&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> hmac <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHmac</span><span class="token punctuation">(</span><span class="token string">&#39;sha256&#39;</span><span class="token punctuation">,</span> secret<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> input <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">createReadStream</span><span class="token punctuation">(</span><span class="token string">&#39;./test.txt&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

hmac<span class="token punctuation">.</span><span class="token function">setEncoding</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

input<span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>hmac<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pipe</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span>
<span class="token comment">// \u8F93\u51FA\uFF1A</span>
<span class="token comment">// 734cc62f32841568f45715aeb9f4d7891324e6d948e4c6c60c0621cdac48623a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="_3-3-md5\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#_3-3-md5\u4F8B\u5B50" aria-hidden="true">#</a> 3.3 MD5\u4F8B\u5B50</h3><p>MD5\uFF08Message-Digest Algorithm\uFF09\u662F\u8BA1\u7B97\u673A\u5B89\u5168\u9886\u57DF\u5E7F\u6CDB\u4F7F\u7528\u7684\u6563\u5217\u51FD\u6570\uFF08\u53C8\u79F0\u54C8\u5E0C\u7B97\u6CD5\u3001\u6458\u8981\u7B97\u6CD5\uFF09\uFF0C\u4E3B\u8981\u7528\u6765\u786E\u4FDD\u6D88\u606F\u7684\u5B8C\u6574\u548C\u4E00\u81F4\u6027\u3002\u5E38\u89C1\u7684\u5E94\u7528\u573A\u666F\u6709\u5BC6\u7801\u4FDD\u62A4\u3001\u4E0B\u8F7D\u6587\u4EF6\u6821\u9A8C\u7B49\u3002</p><p><strong>\u7279\u70B9</strong></p><ol><li>\u8FD0\u7B97\u901F\u5EA6\u5FEB\uFF1A\u5BF9<code>jquery.js</code>\u6C42md5\u503C\uFF0C57254\u4E2A\u5B57\u7B26\uFF0C\u8017\u65F61.907ms</li><li>\u8F93\u51FA\u957F\u5EA6\u56FA\u5B9A\uFF1A\u8F93\u5165\u957F\u5EA6\u4E0D\u56FA\u5B9A\uFF0C\u8F93\u51FA\u957F\u5EA6\u56FA\u5B9A\uFF08128\u4F4D\uFF09\u3002</li><li>\u8FD0\u7B97\u4E0D\u53EF\u9006\uFF1A\u5DF2\u77E5\u8FD0\u7B97\u7ED3\u679C\u7684\u60C5\u51B5\u4E0B\uFF0C\u65E0\u6CD5\u901A\u8FC7\u901A\u8FC7\u9006\u8FD0\u7B97\u5F97\u5230\u539F\u59CB\u5B57\u7B26\u4E32\u3002</li><li>\u9AD8\u5EA6\u79BB\u6563\uFF1A\u8F93\u5165\u7684\u5FAE\u5C0F\u53D8\u5316\uFF0C\u53EF\u5BFC\u81F4\u8FD0\u7B97\u7ED3\u679C\u5DEE\u5F02\u5DE8\u5927\u3002</li><li>\u5F31\u78B0\u649E\u6027\uFF1A\u4E0D\u540C\u8F93\u5165\u7684\u6563\u5217\u503C\u53EF\u80FD\u76F8\u540C\u3002</li></ol><p><strong>\u5E94\u7528\u573A\u666F</strong></p><ol><li>\u6587\u4EF6\u5B8C\u6574\u6027\u6821\u9A8C\uFF1A\u6BD4\u5982\u4ECE\u7F51\u4E0A\u4E0B\u8F7D\u4E00\u4E2A\u8F6F\u4EF6\uFF0C\u4E00\u822C\u7F51\u7AD9\u90FD\u4F1A\u5C06\u8F6F\u4EF6\u7684md5\u503C\u9644\u5728\u7F51\u9875\u4E0A\uFF0C\u7528\u6237\u4E0B\u8F7D\u5B8C\u8F6F\u4EF6\u540E\uFF0C\u53EF\u5BF9\u4E0B\u8F7D\u5230\u672C\u5730\u7684\u8F6F\u4EF6\u8FDB\u884Cmd5\u8FD0\u7B97\uFF0C\u7136\u540E\u8DDF\u7F51\u7AD9\u4E0A\u7684md5\u503C\u8FDB\u884C\u5BF9\u6BD4\uFF0C\u786E\u4FDD\u4E0B\u8F7D\u7684\u8F6F\u4EF6\u662F\u5B8C\u6574\u7684\uFF08\u6216\u6B63\u786E\u7684\uFF09</li><li>\u5BC6\u7801\u4FDD\u62A4\uFF1A\u5C06md5\u540E\u7684\u5BC6\u7801\u4FDD\u5B58\u5230\u6570\u636E\u5E93\uFF0C\u800C\u4E0D\u662F\u4FDD\u5B58\u660E\u6587\u5BC6\u7801\uFF0C\u907F\u514D\u62D6\u5E93\u7B49\u4E8B\u4EF6\u53D1\u751F\u540E\uFF0C\u660E\u6587\u5BC6\u7801\u5916\u6CC4\u3002</li><li>\u9632\u7BE1\u6539\uFF1A\u6BD4\u5982\u6570\u5B57\u8BC1\u4E66\u7684\u9632\u7BE1\u6539\uFF0C\u5C31\u7528\u5230\u4E86\u6458\u8981\u7B97\u6CD5\u3002\uFF08\u5F53\u7136\u8FD8\u8981\u7ED3\u5408\u6570\u5B57\u7B7E\u540D\u7B49\u624B\u6BB5\uFF09</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">var</span> result <span class="token operator">=</span> md5<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8F93\u51FA\uFF1A0cc175b9c0f1b6a831c399e269772661</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h3 id="_3-4-\u4F8B\u5B50-\u5BC6\u7801\u4FDD\u62A4" tabindex="-1"><a class="header-anchor" href="#_3-4-\u4F8B\u5B50-\u5BC6\u7801\u4FDD\u62A4" aria-hidden="true">#</a> 3.4 \u4F8B\u5B50\uFF1A\u5BC6\u7801\u4FDD\u62A4</h3><p>\u524D\u9762\u63D0\u5230\uFF0C\u5C06\u660E\u6587\u5BC6\u7801\u4FDD\u5B58\u5230\u6570\u636E\u5E93\u662F\u5F88\u4E0D\u5B89\u5168\u7684\uFF0C\u6700\u4E0D\u6D4E\u4E5F\u8981\u8FDB\u884Cmd5\u540E\u8FDB\u884C\u4FDD\u5B58\u3002\u6BD4\u5982\u7528\u6237\u5BC6\u7801\u662F<code>123456</code>\uFF0Cmd5\u8FD0\u884C\u540E\uFF0C\u5F97\u5230<code>\u8F93\u51FA\uFF1Ae10adc3949ba59abbe56e057f20f883e</code>\u3002</p><p>\u8FD9\u6837\u81F3\u5C11\u6709\u4E24\u4E2A\u597D\u5904\uFF1A</p><ol><li>\u9632\u5185\u90E8\u653B\u51FB\uFF1A\u7F51\u7AD9\u4E3B\u4EBA\u4E5F\u4E0D\u77E5\u9053\u7528\u6237\u7684\u660E\u6587\u5BC6\u7801\uFF0C\u907F\u514D\u7F51\u7AD9\u4E3B\u4EBA\u62FF\u7740\u7528\u6237\u660E\u6587\u5BC6\u7801\u5E72\u574F\u4E8B\u3002</li><li>\u9632\u5916\u90E8\u653B\u51FB\uFF1A\u5982\u7F51\u7AD9\u88AB\u9ED1\u5BA2\u5165\u4FB5\uFF0C\u9ED1\u5BA2\u4E5F\u53EA\u80FD\u62FF\u5230md5\u540E\u7684\u5BC6\u7801\uFF0C\u800C\u4E0D\u662F\u7528\u6237\u7684\u660E\u6587\u5BC6\u7801\u3002</li></ol><p>\u793A\u4F8B\u4EE3\u7801\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">cryptPwd</span><span class="token punctuation">(</span><span class="token parameter">password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> md5<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> password <span class="token operator">=</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> cryptedPassword <span class="token operator">=</span> <span class="token function">cryptPwd</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>cryptedPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8F93\u51FA\uFF1Ae10adc3949ba59abbe56e057f20f883e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p><strong>\u5355\u7EAF\u5BF9\u5BC6\u7801\u8FDB\u884Cmd5\u4E0D\u5B89\u5168</strong></p><p>\u524D\u9762\u63D0\u5230\uFF0C\u901A\u8FC7\u5BF9\u7528\u6237\u5BC6\u7801\u8FDB\u884Cmd5\u8FD0\u7B97\u6765\u63D0\u9AD8\u5B89\u5168\u6027\u3002\u4F46\u5B9E\u9645\u4E0A\uFF0C\u8FD9\u6837\u7684\u5B89\u5168\u6027\u662F\u5F88\u5DEE\u7684\uFF0C\u4E3A\u4EC0\u4E48\u5462\uFF1F</p><p>\u7A0D\u5FAE\u4FEE\u6539\u4E0B\u4E0A\u9762\u7684\u4F8B\u5B50\uFF0C\u53EF\u80FD\u4F60\u5C31\u660E\u767D\u4E86\u3002\u76F8\u540C\u7684\u660E\u6587\u5BC6\u7801\uFF0Cmd5\u503C\u4E5F\u662F\u76F8\u540C\u7684\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">cryptPwd</span><span class="token punctuation">(</span><span class="token parameter">password</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> md5<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> password <span class="token operator">=</span> <span class="token string">&#39;123456&#39;</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token function">cryptPwd</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8F93\u51FA\uFF1Ae10adc3949ba59abbe56e057f20f883e</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span> <span class="token function">cryptPwd</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8F93\u51FA\uFF1Ae10adc3949ba59abbe56e057f20f883e</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u4E5F\u5C31\u662F\u8BF4\uFF0C\u5F53\u653B\u51FB\u8005\u77E5\u9053\u7B97\u6CD5\u662Fmd5\uFF0C\u4E14\u6570\u636E\u5E93\u91CC\u5B58\u50A8\u7684\u5BC6\u7801\u503C\u4E3A<code>e10adc3949ba59abbe56e057f20f883e</code>\u65F6\uFF0C\u7406\u8BBA\u4E0A\u53EF\u4EE5\u53EF\u4EE5\u731C\u5230\uFF0C\u7528\u6237\u7684\u660E\u6587\u5BC6\u7801\u5C31\u662F<code>123456</code>\u3002</p><p>\u4E8B\u5B9E\u4E0A\uFF0C\u5F69\u8679\u8868\u5C31\u662F\u8FD9\u4E48\u8FDB\u884C\u66B4\u529B\u7834\u89E3\u7684\uFF1A\u4E8B\u5148\u5C06\u5E38\u89C1\u660E\u6587\u5BC6\u7801\u7684md5\u503C\u8FD0\u7B97\u597D\u5B58\u8D77\u6765\uFF0C\u7136\u540E\u8DDF\u7F51\u7AD9\u6570\u636E\u5E93\u91CC\u5B58\u50A8\u7684\u5BC6\u7801\u8FDB\u884C\u5339\u914D\uFF0C\u5C31\u80FD\u591F\u5FEB\u901F\u627E\u5230\u7528\u6237\u7684\u660E\u6587\u5BC6\u7801\u3002\uFF08\u8FD9\u91CC\u4E0D\u63A2\u7A76\u5177\u4F53\u7EC6\u8282\uFF09</p><p>\u90A3\u4E48\uFF0C\u6709\u4EC0\u4E48\u529E\u6CD5\u53EF\u4EE5\u8FDB\u4E00\u6B65\u63D0\u5347\u5B89\u5168\u6027\u5462\uFF1F\u7B54\u6848\u662F\uFF1A\u5BC6\u7801\u52A0\u76D0\u3002</p><p><strong>\u5BC6\u7801\u52A0\u76D0</strong></p><p>\u201C\u52A0\u76D0\u201D\u8FD9\u4E2A\u8BCD\u770B\u4E0A\u53BB\u5F88\u7384\u4E4E\uFF0C\u5176\u5B9E\u539F\u7406\u5F88\u7B80\u5355\uFF0C\u5C31\u662F\u5728\u5BC6\u7801\u7279\u5B9A\u4F4D\u7F6E\u63D2\u5165\u7279\u5B9A\u5B57\u7B26\u4E32\u540E\uFF0C\u518D\u5BF9\u4FEE\u6539\u540E\u7684\u5B57\u7B26\u4E32\u8FDB\u884Cmd5\u8FD0\u7B97\u3002</p><p>\u4F8B\u5B50\u5982\u4E0B\u3002\u540C\u6837\u7684\u5BC6\u7801\uFF0C\u5F53\u201C\u76D0\u201D\u503C\u4E0D\u4E00\u6837\u65F6\uFF0Cmd5\u503C\u7684\u5DEE\u5F02\u975E\u5E38\u5927\u3002\u901A\u8FC7\u5BC6\u7801\u52A0\u76D0\uFF0C\u53EF\u4EE5\u9632\u6B62\u6700\u521D\u7EA7\u7684\u66B4\u529B\u7834\u89E3\uFF0C\u5982\u679C\u653B\u51FB\u8005\u4E8B\u5148\u4E0D\u77E5\u9053\u201D\u76D0\u201C\u503C\uFF0C\u7834\u89E3\u7684\u96BE\u5EA6\u5C31\u4F1A\u975E\u5E38\u5927\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> crypto <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;crypto&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">cryptPwd</span><span class="token punctuation">(</span><span class="token parameter">password<span class="token punctuation">,</span> salt</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5BC6\u7801\u201C\u52A0\u76D0\u201D</span>
    <span class="token keyword">var</span> saltPassword <span class="token operator">=</span> password <span class="token operator">+</span> <span class="token string">&#39;:&#39;</span> <span class="token operator">+</span> salt<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u539F\u59CB\u5BC6\u7801\uFF1A%s&#39;</span><span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u52A0\u76D0\u540E\u7684\u5BC6\u7801\uFF1A%s&#39;</span><span class="token punctuation">,</span> saltPassword<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// \u52A0\u76D0\u5BC6\u7801\u7684md5\u503C</span>
    <span class="token keyword">var</span> md5 <span class="token operator">=</span> crypto<span class="token punctuation">.</span><span class="token function">createHash</span><span class="token punctuation">(</span><span class="token string">&#39;md5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> md5<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>saltPassword<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">digest</span><span class="token punctuation">(</span><span class="token string">&#39;hex&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u52A0\u76D0\u5BC6\u7801\u7684md5\u503C\uFF1A%s&#39;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">cryptPwd</span><span class="token punctuation">(</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;abc&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8F93\u51FA\uFF1A</span>
<span class="token comment">// \u539F\u59CB\u5BC6\u7801\uFF1A123456</span>
<span class="token comment">// \u52A0\u76D0\u540E\u7684\u5BC6\u7801\uFF1A123456:abc</span>
<span class="token comment">// \u52A0\u76D0\u5BC6\u7801\u7684md5\u503C\uFF1A51011af1892f59e74baf61f3d4389092</span>

<span class="token function">cryptPwd</span><span class="token punctuation">(</span><span class="token string">&#39;123456&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;bcd&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u8F93\u51FA\uFF1A</span>
<span class="token comment">// \u539F\u59CB\u5BC6\u7801\uFF1A123456</span>
<span class="token comment">// \u52A0\u76D0\u540E\u7684\u5BC6\u7801\uFF1A123456:bcd</span>
<span class="token comment">// \u52A0\u76D0\u5BC6\u7801\u7684md5\u503C\uFF1A55a95bcb6bfbaef6906dbbd264ab4531</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br></div></div>`,84);function t(e,c){return p}var l=n(a,[["render",t],["__file","07 \u3010nodejs\u5185\u7F6E\u6A21\u5757\uFF08\u4E0B\uFF09\u3011.html.vue"]]);export{l as default};
