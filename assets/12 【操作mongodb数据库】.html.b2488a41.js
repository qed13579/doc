import{_ as n,e as s}from"./app.8de1a9ea.js";const a={},p=s(`<h1 id="_12-\u3010\u64CD\u4F5Cmongodb\u6570\u636E\u5E93\u3011" tabindex="-1"><a class="header-anchor" href="#_12-\u3010\u64CD\u4F5Cmongodb\u6570\u636E\u5E93\u3011" aria-hidden="true">#</a> 12 \u3010\u64CD\u4F5Cmongodb\u6570\u636E\u5E93\u3011</h1><h2 id="_1-\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#_1-\u7B80\u4ECB" aria-hidden="true">#</a> 1.\u7B80\u4ECB</h2><ul><li>1.Mongoose\u662F\u4E00\u4E2A\u8BA9\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7Node\u6765\u64CD\u4F5CMongoDB\u7684\u6A21\u5757\u3002</li><li>2.Mongoose\u662F\u4E00\u4E2A\u5BF9\u8C61\u6587\u6863\u6A21\u578B(ODM)\u5E93,\u5B83\u5BF9Node\u539F\u751F\u7684MongoDB\u6A21\u5757\u8FDB\u884C\u4E86\u8FDB\u4E00\u6B65\u7684\u4F18\u5316\u5C01\u88C5\uFF0C\u5E76\u63D0\u4F9B\u4E86\u66F4\u591A\u7684\u529F\u80FD\u3002\u5728\u5927\u591A\u6570\u60C5\u51B5\u4E0B\uFF0C\u5B83\u88AB\u7528\u6765\u628A\u7ED3\u6784\u5316\u7684\u6A21\u5F0F\u5E94\u7528\u5230\u4E00\u4E2AMongoDB\u96C6\u5408\uFF0C\u5E76\u63D0\u4F9B\u4E86\u9A8C\u8BC1\u548C\u7C7B\u578B\u8F6C\u6362\u7B49\u597D\u5904</li><li>3.mongoose\u4E2D\u7684\u5BF9\u8C61\uFF1A <ul><li>Schema \u6A21\u5F0F\u5BF9\u8C61\uFF08Schema\u5BF9\u8C61\u5B9A\u4E49\u7EA6\u675F\u4E86\u6570\u636E\u5E93\u4E2D\u7684\u6587\u6863\u7ED3\u6784\uFF09</li><li>Model \u6A21\u578B\u5BF9\u8C61\uFF08Model\u5BF9\u8C61\u4F5C\u4E3A\u96C6\u5408\u4E2D\u7684\u6240\u6709\u6587\u6863\u7684\u8868\u793A\uFF0C\u76F8\u5F53\u4E8EMongoDB\u6570\u636E\u5E93\u4E2D\u7684\u96C6\u5408collection\uFF09</li><li>Document \u6587\u6863\u5BF9\u8C61\uFF08Document\u8868\u793A\u96C6\u5408\u4E2D\u7684\u5177\u4F53\u6587\u6863\uFF0C\u76F8\u5F53\u4E8E\u96C6\u5408\u4E2D\u7684\u4E00\u4E2A\u5177\u4F53\u7684\u6587\u6863\uFF09</li></ul></li></ul><p><strong>mongoose\u7684\u597D\u5904</strong></p><blockquote><ol><li>\u53EF\u4EE5\u4E3A\u6587\u6863\u521B\u5EFA\u4E00\u4E2A\u6A21\u5F0F\u7ED3\u6784(Schema)</li><li>\u53EF\u4EE5\u5BF9\u6A21\u578B\u4E2D\u7684\u5BF9\u8C61/\u6587\u6863\u8FDB\u884C\u9A8C\u8BC1</li><li>\u6570\u636E\u53EF\u4EE5\u901A\u8FC7\u7C7B\u578B\u8F6C\u6362\u8F6C\u6362\u4E3A\u5BF9\u8C61\u6A21\u578B</li><li>\u53EF\u4EE5\u4F7F\u7528\u4E2D\u95F4\u4EF6\u6765\u5E94\u7528\u4E1A\u52A1\u903B\u8F91\u6302\u94A9</li><li>\u6BD4Node\u539F\u751F\u7684MongoDB\u9A71\u52A8\u66F4\u5BB9\u6613</li></ol></blockquote><p><strong>\u5B89\u88C5</strong></p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> i <span class="token parameter variable">-S</span> mongoose
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="_2-\u8FDE\u63A5\u6570\u636E\u5E93" tabindex="-1"><a class="header-anchor" href="#_2-\u8FDE\u63A5\u6570\u636E\u5E93" aria-hidden="true">#</a> 2.\u8FDE\u63A5\u6570\u636E\u5E93</h2><p><code>config/db.config.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 1.\u5F15\u5165mongoose</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;mongoose&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 2.\u8FDE\u63A5mongodb\u6570\u636E\u5E93</span>
<span class="token comment">// \u6307\u5B9A\u8FDE\u63A5\u6570\u636E\u5E93\u540E\u4E0D\u9700\u8981\u5B58\u5728\uFF0C\u5F53\u4F60\u63D2\u5165\u7B2C\u4E00\u6761\u6570\u636E\u5E93\u540E\u4F1A\u81EA\u52A8\u521B\u5EFA\u6570\u636E\u5E93</span>
<span class="token comment">/*
mongoose.connect(&#39;mongodb://\u6570\u636E\u5E93\u5730\u5740:\u7AEF\u53E3\u53F7/\u6570\u636E\u5E93\u540D&#39;,{useMongoClient:true})
\u5982\u679C\u7AEF\u53E3\u53F7\u662F\u9ED8\u8BA4\u7AEF\u53E3\u53F7(27017)\u5219\u53EF\u4EE5\u7701\u7565\u4E0D\u5199
*/</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&quot;mongodb://localhost:27017/ds2&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">useNewUrlParser</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token literal-property property">useUnifiedTopology</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 3.\u76D1\u542Cmongodb\u6570\u636E\u5E93\u7684\u8FDE\u63A5\u72B6\u6001</span>
<span class="token comment">// \u7ED1\u5B9A\u6570\u636E\u5E93\u8FDE\u63A5\u6210\u529F\u4E8B\u4EF6</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&quot;open&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u8FDE\u63A5\u6210\u529F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7ED1\u5B9A\u6570\u636E\u5E93\u8FDE\u63A5\u5931\u8D25\u4E8B\u4EF6</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&quot;close&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6570\u636E\u5E93\u8FDE\u63A5\u5DF2\u7ECF\u65AD\u5F00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 4.\u65AD\u5F00\u6570\u636E\u5E93\u8FDE\u63A5(\u4E00\u822C\u4E0D\u7528)</span>
mongooes<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><blockquote><p><code>\u6CE8:MongoDB\u6570\u636E\u5E93\uFF0C\u4E00\u822C\u60C5\u51B5\u4E0B\uFF0C\u53EA\u9700\u8981\u8FDE\u63A5\u4E00\u6B21\uFF0C\u8FDE\u63A5\u4E00\u6B21\u540E\uFF0C\u9664\u975E\u9879\u76EE\u505C\u6B62\u670D\u52A1\u5668\u5173\u95ED\uFF0C\u5426\u5219\u8FDE\u63A5\u4E00\u822C\u4E0D\u4F1A\u65AD\u5F00</code></p></blockquote><p><strong>\u5728bin\u76EE\u5F55\u4E0B\u7684www\u6587\u4EF6\u4E2D\u4F7F\u7528\u76F4\u63A5require(\u201C../config/db.config.js\u201D)\u8FDB\u884C\u6570\u636E\u5E93\u8FDE\u63A5\u7684\u542F\u52A8</strong></p><p><img src="https://i0.hdslb.com/bfs/album/585a2a31647d3662dd1af7fd3aa86f639073e082.png" alt="image-20221103204502381"></p><h2 id="_3-\u521B\u5EFA\u6A21\u5F0F\u5BF9\u8C61\u548C\u6A21\u578B\u5BF9\u8C61" tabindex="-1"><a class="header-anchor" href="#_3-\u521B\u5EFA\u6A21\u5F0F\u5BF9\u8C61\u548C\u6A21\u578B\u5BF9\u8C61" aria-hidden="true">#</a> 3.\u521B\u5EFA\u6A21\u5F0F\u5BF9\u8C61\u548C\u6A21\u578B\u5BF9\u8C61</h2><p>\u6570\u636E\u5E93\u4E2D\u7684 Schema\uFF0C\u4E3A\u6570\u636E\u5E93\u5BF9\u8C61\u7684\u96C6\u5408\u3002schema \u662F mongoose \u91CC\u4F1A\u7528\u5230\u7684\u4E00\u79CD\u6570\u636E\u6A21\u5F0F\uFF0C\u53EF\u4EE5\u7406\u89E3\u4E3A\u8868\u7ED3\u6784\u7684\u5B9A\u4E49\uFF1B\u6BCF\u4E2A schema\u4F1A\u6620\u5C04\u5230 mongodb \u4E2D\u7684\u4E00\u4E2A collection\uFF0C\u5B83\u4E0D\u5177\u5907\u64CD\u4F5C\u6570\u636E\u5E93\u7684\u80FD\u529B\u3002</p><ul><li>\u6BCF\u4E2A schema \u90FD\u4F1A\u6620\u5C04\u5230\u4E00\u4E2A MongoDB collection \u5E76\u5B9A\u4E49\u8FD9\u4E2Acollection\u91CC\u7684\u6587\u6863\u7ED3\u6784</li><li>\u652F\u6301\u7684\u5B57\u6BB5\u7C7B\u578B</li></ul><table><thead><tr><th>\u7C7B\u578B</th><th>\u4F5C\u7528</th></tr></thead><tbody><tr><td>String</td><td>\u5B9A\u4E49\u5B57\u7B26\u4E32</td></tr><tr><td>Number</td><td>\u5B9A\u4E49\u6570\u5B57</td></tr><tr><td>Date</td><td>\u5B9A\u4E49\u65E5\u671F</td></tr><tr><td>Buffer</td><td>\u5B9A\u4E49\u4E8C\u8FDB\u5236</td></tr><tr><td>Boolean</td><td>\u5B9A\u4E49\u5E03\u5C14\u503C</td></tr><tr><td>Mixed</td><td>\u5B9A\u4E49\u6DF7\u5408\u7C7B\u578B</td></tr><tr><td>ObjectId</td><td>\u5B9A\u4E49\u5BF9\u8C61ID</td></tr><tr><td>Array</td><td>\u5B9A\u4E49\u6570\u7EC4</td></tr></tbody></table><p><code>model/UserModel.js</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;mongoose&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> Schema<span class="token operator">=</span>mongooes<span class="token punctuation">.</span>Schema<span class="token punctuation">;</span>
<span class="token comment">//\u521B\u5EFA\u6A21\u5F0F\u5BF9\u8C61</span>
<span class="token keyword">const</span> UserType<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token punctuation">{</span>
           <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">,</span>
           <span class="token comment">//\u6DFB\u52A0\u7EA6\u675F\uFF0C\u4FDD\u8BC1\u6570\u636E\u7684\u5B8C\u6574\u6027\uFF0C\u8BA9\u6570\u636E\u6309\u89C4\u77E9\u7EDF\u4E00</span>
           <span class="token literal-property property">require</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">age</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>
    <span class="token literal-property property">gender</span><span class="token operator">:</span><span class="token punctuation">{</span>
        <span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
        <span class="token comment">// \u9ED8\u8BA4\u503C</span>
        <span class="token keyword">default</span><span class="token operator">:</span><span class="token string">&#39;female&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token literal-property property">address</span><span class="token operator">:</span>String
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//\u521B\u5EFA\u6A21\u578B\u5BF9\u8C61</span>
<span class="token comment">//\u901A\u8FC7Schema\u6765\u521B\u5EFAModel</span>
<span class="token comment">//Model\u4EE3\u8868\u7684\u662F\u6570\u636E\u5E93\u4E2D\u7684\u96C6\u5408\uFF0C\u901A\u8FC7Model\u624D\u80FD\u5BF9\u6570\u636E\u5E93\u8FDB\u884C\u64CD\u4F5C</span>
<span class="token comment">//mongoose.model(modelName,schema)</span>
<span class="token comment">//\u5EFA\u7ACB\u6620\u5C04\u5173\u7CFB\uFF0Cstudents\u662F\u96C6\u5408,mongoose\u4F1A\u81EA\u52A8\u5C06\u96C6\u5408\u53D8\u6210\u590D\u6570\u6BD4\u5982student\u4F1A\u53D8\u6210students</span>
<span class="token comment">//\u5927\u5199\u4E5F\u4F1A\u88AB\u81EA\u52A8\u8F6C\u6362\u4E3A\u5C0F\u5199\uFF0C\u6BD4\u5982Users\u4F1A\u53D8\u6210users</span>
<span class="token keyword">const</span> UserModel<span class="token operator">=</span>mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&quot;UserModel&quot;</span><span class="token punctuation">,</span>UserType\uFF0C<span class="token string">&quot;user&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token comment">//\u7B2C\u4E00\u4E2A\u53C2\u6570\u8868\u793A\u521B\u5EFA\u7684\u96C6\u5408\u7684\u540D\u79F0\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u8868\u793A\u5229\u7528\u7684\u6A21\u5F0F\u5BF9\u8C61\uFF0C\u7B2C\u4E09\u4E2A\u53C2\u6570\u662F\u5F3A\u884C\u6307\u5B9A\u96C6\u5408\u540D\u79F0</span>

module<span class="token punctuation">.</span>exports  <span class="token operator">=</span> UserModel 
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><p><img src="https://tva1.sinaimg.cn/large/0074UQWJgy1h3eh7qxqhkj307k03ywex.jpg" alt="image-20220619145550360"></p><h2 id="_4-\u6587\u6863\u65B0\u589E" tabindex="-1"><a class="header-anchor" href="#_4-\u6587\u6863\u65B0\u589E" aria-hidden="true">#</a> 4.\u6587\u6863\u65B0\u589E</h2><h3 id="_4-1-save" tabindex="-1"><a class="header-anchor" href="#_4-1-save" aria-hidden="true">#</a> 4.1 save()</h3><ul><li>\u64CD\u4F5C\u7684\u662F\u6587\u6863</li></ul><p>\u6848\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> UserModel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../model/UserModel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//\u94FE\u5F0F\u8C03\u7528 \u901A\u8FC7new \u4E00\u4E2AModel\u521B\u5EFA\u4E00\u4E2A document</span>
<span class="token keyword">new</span> <span class="token class-name">UserModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;\u5C0F\u660E&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
        res<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
          <span class="token literal-property property">code</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span>
          <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">id</span><span class="token operator">:</span> docs<span class="token punctuation">.</span>_id<span class="token punctuation">,</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">//{ _id: 6017bd1cf4cc8544d8ed2a8a, name: &#39;\u5C0F\u660E&#39;, age: 18, __v: 0 }</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_4-2-create" tabindex="-1"><a class="header-anchor" href="#_4-2-create" aria-hidden="true">#</a> 4.2 create()</h3><ul><li><p>\u64CD\u4F5C\u6A21\u578B</p></li><li><p>Model.create(doc(s), [callback])</p></li><li><p>\u53C2\u6570\uFF1A</p><p>[doc(s)]\uFF1A\u6587\u6863\u5BF9\u8C61\u6216\u6587\u6863\u5BF9\u8C61\u6570\u7EC4</p><p>[callback]\uFF1A\u56DE\u8C03\u51FD\u6570</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> UserModel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../model/UserModel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

UserModel<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;\u5C0F\u660E&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;\u5C0F\u7EA2&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc1<span class="token punctuation">,</span>doc2</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc1<span class="token punctuation">)</span>
        <span class="token comment">//{ _id: 6017be2d77c8dd01242624bb, name: &#39;\u5C0F\u660E&#39;, age: 18, __v: 0 }</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc2<span class="token punctuation">)</span>
        <span class="token comment">//{ _id: 6017be2d77c8dd01242624bc, name: &#39;\u5C0F\u7EA2&#39;, age: 10, __v: 0 }</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>\u5176\u5B83\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//Model.createOne(doc, [callback]);		\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61</span>
<span class="token comment">//Model.createMany(doc, [callback]);		\u521B\u5EFA\u591A\u4E2A\u5BF9\u8C61</span>
<span class="token comment">//	-doc\u662F\u9700\u8981\u63D2\u5165\u7684\u6587\u6863</span>
<span class="token comment">//	-callback(err) \u662F\u56DE\u8C03\u51FD\u6570\uFF0C\u53EF\u4EE5\u7528\u6765\u63D0\u793A\u662F\u5426\u521B\u5EFA\u6210\u529F\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="_4-3-insertmany" tabindex="-1"><a class="header-anchor" href="#_4-3-insertmany" aria-hidden="true">#</a> 4.3 insertMany()</h3><ul><li>Model.insertMany(doc(s), [options], [callback])</li><li>\u8FD4\u56DE\u503C\u4E3A\u4E00\u4E2A\u6570\u7EC4</li><li>\u6848\u4F8B\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>UserModel<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;\u5C0F\u660E&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&quot;\u5C0F\u82B3&quot;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">14</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
        <span class="token comment">/*[{ _id: 6017befb5c36d64d08b72576, name: &#39;\u5C0F\u660E&#39;, grades: 68, __v: 0 },
           { _id: 6017befb5c36d64d08b72577, name: &#39;\u5C0F\u82B3&#39;, grades: 94, __v: 0 }]*/</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><h2 id="_5-\u6587\u6863\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#_5-\u6587\u6863\u67E5\u8BE2" aria-hidden="true">#</a> 5.\u6587\u6863\u67E5\u8BE2</h2><table><thead><tr><th>_id</th><th>name</th><th>grades</th><th>__v</th></tr></thead><tbody><tr><td>6017befb5c36d64d08b72576</td><td>\u5C0F\u660E</td><td>68</td><td>0</td></tr><tr><td>6017befb5c36d64d08b72577</td><td>\u5C0F\u82B3</td><td>94</td><td>0</td></tr><tr><td>6017c455ba09d355a49ec8eb</td><td>\u5C0F\u7EA2</td><td>52</td><td>0</td></tr><tr><td>6017c455ba09d355a49ec8ec</td><td>\u5C0F\u521A</td><td>46</td><td>0</td></tr></tbody></table><h3 id="_5-1-find" tabindex="-1"><a class="header-anchor" href="#_5-1-find" aria-hidden="true">#</a> 5.1 find()</h3><ul><li><p>Model.find(conditions, [projection], [options], [callback])</p></li><li><p>\u53C2\u6570</p></li></ul><p>\u200B conditions\uFF1A\u67E5\u8BE2\u6761\u4EF6</p><p>\u200B [projection]\uFF1A\u63A7\u5236\u8FD4\u56DE\u5B57\u6BB5</p><p>\u200B [options]\uFF1A\u914D\u7F6E\u67E5\u8BE2\u53C2\u6570</p><p>\u200B [callback]\uFF1A\u56DE\u8C03\u51FD\u6570\u2013function(err,docs){}</p><ul><li><p>\u6848\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span>schema<span class="token punctuation">)</span>
        <span class="token comment">//\u67E5\u8BE2\u6240\u6709\u6570\u636E</span>
        stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
           <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
            	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
        	<span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>        
       <span class="token comment">/* [{ _id: 6017befb5c36d64d08b72576, name: &#39;\u5C0F\u660E&#39;, grades: 68, __v: 0 },
           { _id: 6017befb5c36d64d08b72577, name: &#39;\u5C0F\u82B3&#39;, grades: 94, __v: 0 },
           { _id: 6017c455ba09d355a49ec8eb, name: &#39;\u5C0F\u7EA2&#39;, grades: 52, __v: 0 },
           { _id: 6017c455ba09d355a49ec8ec, name: &#39;\u5C0F\u521A&#39;, grades: 46, __v: 0 }]*/</span>
        
        <span class="token comment">//\u67E5\u8BE2\u6210\u7EE9\u5927\u4E8E60\u4EE5\u4E0A\u7684\u6570\u636E</span>
        stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">grades</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gte</span><span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
             <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">/*[{ _id: 6017befb5c36d64d08b72576, name: &#39;\u5C0F\u660E&#39;, grades: 68, __v: 0 },
           { _id: 6017befb5c36d64d08b72577, name: &#39;\u5C0F\u82B3&#39;, grades: 94, __v: 0 }]*/</span>
        
        <span class="token comment">//\u67E5\u8BE2\u6210\u7EE9\u5927\u4E8E60\u4EE5\u4E0A\u4E14\u540D\u5B57\u91CC\u5B58\u5728\u2018\u82B3\u2019\u7684\u6570\u636E</span>
        stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\u82B3</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gte</span><span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
             <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">/*[
        *     { _id: 6017befb5c36d64d08b72577, name: &#39;\u5C0F\u82B3&#39;, grades: 94, __v: 0 }
        * ]*/</span>
        
        <span class="token comment">//\u67E5\u8BE2\u540D\u5B57\u91CC\u5B58\u5728\u2018\u660E\u2019\u7684\u6570\u636E\u4E14\u53EA\u8F93\u51FA\u2018name\u2019\u5B57\u6BB5</span>
        <span class="token comment">//_id\u9ED8\u8BA4\u4F1A\u8FD4\u56DE</span>
        stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\u660E</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
             <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">// [{name: &#39;\u5C0F\u660E&#39;}]</span>
        
        <span class="token comment">//\u8DF3\u8FC7\u524D\u4E24\u6761\u6570\u636E\u5E76\u9650\u5236\u53EA\u8F93\u51FA\u4E00\u6761\u6570\u636E</span>
        stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">skip</span><span class="token operator">:</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
             <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">/*[{ _id: 6017c455ba09d355a49ec8eb, name: &#39;\u5C0F\u7EA2&#39;, grades: 52, __v: 0 }*/</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br></div></div></li></ul><h3 id="_5-2-findbyid" tabindex="-1"><a class="header-anchor" href="#_5-2-findbyid" aria-hidden="true">#</a> 5.2 findById()</h3><ul><li>Model.findById(id, [projection], [options], [callback])</li><li>\u6848\u4F8B\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span>schema<span class="token punctuation">)</span>
        <span class="token comment">//\u4FDD\u5B58\u67E5\u8BE2\u6570\u636E\u7684_id</span>
        <span class="token keyword">var</span> aIDArr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        
        <span class="token comment">//\u67E5\u8BE2\u6240\u6709\u6570\u636E</span>
        stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
           <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
            	docs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    aIDArr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>_id<span class="token punctuation">)</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
                <span class="token comment">//\u663E\u793A\u7B2C 0 \u4E2A\u5143\u7D20\u7684\u6240\u6709\u5B57\u6BB5</span>
                stuModel<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>aIDArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
               <span class="token comment">// { _id: 6017befb5c36d64d08b72576, name: &#39;\u5C0F\u660E&#39;, grades: 68, __v: 0 }</span>
               
                <span class="token comment">//\u663E\u793A\u7B2C 0 \u4E2A\u5143\u7D20\u4E14\u53EA\u8F93\u51FAname\u5B57\u6BB5</span>
                stuModel<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>aIDArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
               <span class="token comment">// { name: &#39;\u5C0F\u660E&#39; }</span>
               
                <span class="token comment">//\u663E\u793A\u7B2C 0 \u4E2A\u5143\u7D20\u4E14\u8F93\u51FA\u6700\u5C11\u7684\u5B57\u6BB5(_id\u9ED8\u8BA4\u8F93\u51FA)</span>
                stuModel<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>aIDArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">lean</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
                    <span class="token punctuation">}</span>
                <span class="token punctuation">}</span><span class="token punctuation">)</span>
               <span class="token comment">// { _id: 6017befb5c36d64d08b72576 }</span>
        	<span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h3 id="_5-3-findone" tabindex="-1"><a class="header-anchor" href="#_5-3-findone" aria-hidden="true">#</a> 5.3 findOne()</h3><ul><li>\u8FD4\u56DE\u67E5\u8BE2\u5230\u7684\u6570\u636E\u7684\u7B2C\u4E00\u4E2A</li><li>Model.findOne([conditions], [projection], [options], [callback])</li><li>\u6848\u4F8B\uFF1A</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span>schema<span class="token punctuation">)</span>
        <span class="token comment">//\u627E\u51FAage&gt;80\u7684\u6587\u6863\u4E2D\u7684\u7B2C\u4E00\u4E2A\u6587\u6863</span>
        stuModel<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">grades</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
           <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
            	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
        	<span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">//{ _id: 6017befb5c36d64d08b72577, name: &#39;\u5C0F\u82B3&#39;, grades: 94, __v: 0 }</span>

        <span class="token comment">//\u627E\u51FAage&gt;80\u7684\u6587\u6863\u4E2D\u7684\u7B2C\u4E00\u4E2A\u6587\u6863\uFF0C\u4E14\u53EA\u8F93\u51FAname\u5B57\u6BB5</span>
        stuModel<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">grades</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
             <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
         <span class="token comment">//{ name: &#39;\u5C0F\u82B3&#39; }</span>

        <span class="token comment">//\u627E\u51FAage&gt;80\u7684\u6587\u6863\u4E2D\u7684\u7B2C\u4E00\u4E2A\u6587\u6863\uFF0C\u4E14\u8F93\u51FA\u5305\u542Bname\u5B57\u6BB5\u5728\u5185\u7684\u6700\u77ED\u5B57\u6BB5</span>
        stuModel<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">grades</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span><span class="token number">80</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">lern</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
             <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
         <span class="token comment">//{ _id: 6017befb5c36d64d08b72577 }</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h3 id="_5-4-\u590D\u6742\u67E5\u8BE2\u3010-where\u3011" tabindex="-1"><a class="header-anchor" href="#_5-4-\u590D\u6742\u67E5\u8BE2\u3010-where\u3011" aria-hidden="true">#</a> 5.4 \u590D\u6742\u67E5\u8BE2\u3010$where\u3011</h3><ul><li><p>$where \u53EF\u4EE5\u4F7F\u7528\u4EFB\u610F\u7684 JavaScript \u4F5C\u4E3A\u67E5\u8BE2\u7684\u4E00\u90E8\u5206\uFF0C\u5305\u542BJavaScript \u8868\u8FBE\u5F0F\u7684\u5B57\u7B26\u4E32\u6216\u8005\u51FD\u6570</p></li><li><p>\u6848\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> schema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">//\u6DFB\u52A0\u4E00\u4E2A\u6D4B\u8BD5\u5B57\u6BB5</span>
        <span class="token comment">// schema.add({test:Number})</span>
        <span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span>schema<span class="token punctuation">)</span>
        <span class="token comment">//\u6DFB\u52A0\u4E24\u6761\u6570\u636E</span>
        <span class="token comment">// stuModel.create({name:&quot;\u5C0F\u82B1&quot;,grades:76,test:76},{name:&quot;\u5C0F\u5170&quot;,grades:60,test:30},(err,docs)=&gt;{</span>
        <span class="token comment">//     console.log(docs)</span>
        <span class="token comment">// })</span>

        <span class="token comment">//\u5B57\u7B26\u4E32 es5\u4E2Dthis\u4E0Eobj\u6307\u5411\u4E00\u6837\uFF0Ces6\u4E2D\u53EA\u80FD\u7528obj</span>
        stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">$where</span><span class="token operator">:</span><span class="token string">&quot;this.grades == this.test&quot;</span> <span class="token operator">||</span> <span class="token string">&quot;obj.grades == obj.test&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
           <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
            	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
        	<span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token comment">//[{_id: 6017d7cb8a95cb2a00aae3ae,name: &#39;\u5C0F\u82B1&#39;,grades: 76,test: 76,__v: 0}]</span>

        <span class="token comment">//\u51FD\u6570</span>
        stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token function-variable function">$where</span><span class="token operator">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>grades <span class="token operator">==</span> <span class="token keyword">this</span><span class="token punctuation">.</span>test <span class="token operator">||</span> obj<span class="token punctuation">.</span>grades <span class="token operator">==</span> obj<span class="token punctuation">.</span>test<span class="token operator">*</span><span class="token number">2</span>
        <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
             <span class="token punctuation">}</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
         <span class="token comment">/*[{_id: 6017d7cb8a95cb2a00aae3ae,name: &#39;\u5C0F\u82B1&#39;,grades: 76,test: 76,__v: 0},
            {_id: 6017d7cb8a95cb2a00aae3af,name: &#39;\u5C0F\u5170&#39;,grades: 60,test: 30,__v: 0}]*/</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div></li></ul><h3 id="_5-5-\u5E38\u7528\u67E5\u8BE2\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#_5-5-\u5E38\u7528\u67E5\u8BE2\u6761\u4EF6" aria-hidden="true">#</a> 5.5 \u5E38\u7528\u67E5\u8BE2\u6761\u4EF6</h3><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token variable">$or</span>\u3000\u3000\u3000\u3000 \u6216\u5173\u7CFB

<span class="token variable">$nor</span>\u3000\u3000\u3000 \u6216\u5173\u7CFB\u53D6\u53CD

<span class="token variable">$gt</span>\u3000\u3000\u3000\u3000 \u5927\u4E8E

<span class="token variable">$gte</span>\u3000\u3000\u3000 \u5927\u4E8E\u7B49\u4E8E

<span class="token variable">$lt</span>\u3000\u3000\u3000\u3000 \u5C0F\u4E8E

<span class="token variable">$lte</span>\u3000\u3000\u3000 \u5C0F\u4E8E\u7B49\u4E8E

<span class="token variable">$ne</span>\u3000\u3000\u3000\u3000 \u4E0D\u7B49\u4E8E

<span class="token variable">$in</span>\u3000\u3000\u3000\u3000 \u5728\u591A\u4E2A\u503C\u8303\u56F4\u5185

<span class="token variable">$nin</span>\u3000\u3000\u3000 \u4E0D\u5728\u591A\u4E2A\u503C\u8303\u56F4\u5185

<span class="token variable">$all</span>\u3000\u3000\u3000 \u5339\u914D\u6570\u7EC4\u4E2D\u591A\u4E2A\u503C

<span class="token variable">$regex</span>\u3000\u3000 \u6B63\u5219\uFF0C\u7528\u4E8E\u6A21\u7CCA\u67E5\u8BE2

<span class="token variable">$size</span>\u3000\u3000\u3000 \u5339\u914D\u6570\u7EC4\u5927\u5C0F

<span class="token variable">$maxDistance</span>\u3000 \u8303\u56F4\u67E5\u8BE2\uFF0C\u8DDD\u79BB\uFF08\u57FA\u4E8ELBS\uFF09

<span class="token variable">$mod</span>\u3000\u3000\u3000\u3000 \u53D6\u6A21\u8FD0\u7B97

<span class="token variable">$near</span>\u3000\u3000\u3000 \u90BB\u57DF\u67E5\u8BE2\uFF0C\u67E5\u8BE2\u9644\u8FD1\u7684\u4F4D\u7F6E\uFF08\u57FA\u4E8ELBS\uFF09

<span class="token variable">$exists</span>\u3000\u3000 \u5B57\u6BB5\u662F\u5426\u5B58\u5728

<span class="token variable">$elemMatch</span>\u3000 \u5339\u914D\u5185\u6570\u7EC4\u5185\u7684\u5143\u7D20

<span class="token variable">$within</span>\u3000\u3000\u3000 \u8303\u56F4\u67E5\u8BE2\uFF08\u57FA\u4E8ELBS\uFF09

<span class="token variable">$box</span>\u3000\u3000\u3000\u3000 \u8303\u56F4\u67E5\u8BE2\uFF0C\u77E9\u5F62\u8303\u56F4\uFF08\u57FA\u4E8ELBS\uFF09

<span class="token variable">$center</span>\u3000\u3000\u3000 \u8303\u56F4\u9192\u8BE2\uFF0C\u5706\u5F62\u8303\u56F4\uFF08\u57FA\u4E8ELBS\uFF09

<span class="token variable">$centerSphere</span>\u3000\u8303\u56F4\u67E5\u8BE2\uFF0C\u7403\u5F62\u8303\u56F4\uFF08\u57FA\u4E8ELBS\uFF09

<span class="token variable">$slice</span>\u3000\u3000\u3000\u3000 \u67E5\u8BE2\u5B57\u6BB5\u96C6\u5408\u4E2D\u7684\u5143\u7D20\uFF08\u6BD4\u5982\u4ECE\u7B2C\u51E0\u4E2A\u4E4B\u540E\uFF0C\u7B2CN\u5230\u7B2CM\u4E2A\u5143\u7D20
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br></div></div><h3 id="_5-6-\u7279\u5B9A\u7C7B\u578B\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#_5-6-\u7279\u5B9A\u7C7B\u578B\u67E5\u8BE2" aria-hidden="true">#</a> 5.6 \u7279\u5B9A\u7C7B\u578B\u67E5\u8BE2</h3><table><thead><tr><th>_id</th><th>name</th><th>grades</th><th>__v</th><th>test</th></tr></thead><tbody><tr><td>6017befb5c36d64d08b72576</td><td>\u5C0F\u660E</td><td>68</td><td>0</td><td>1</td></tr><tr><td>6017befb5c36d64d08b72577</td><td>\u5C0F\u82B3</td><td>94</td><td>0</td><td>3</td></tr><tr><td>6017c455ba09d355a49ec8eb</td><td>\u5C0F\u7EA2</td><td>52</td><td>0</td><td>5</td></tr><tr><td>6017c455ba09d355a49ec8ec</td><td>\u5C0F\u521A</td><td>46</td><td>0</td><td>2</td></tr><tr><td>6017d7cb8a95cb2a00aae3ae</td><td>\u5C0F\u82B1</td><td>76</td><td>0</td><td>4</td></tr><tr><td>6017d7cb8a95cb2a00aae3af</td><td>\u5C0F\u5170</td><td>60</td><td>0</td><td>6</td></tr></tbody></table><p><strong>\u65B9\u6CD5</strong></p><table><thead><tr><th>\u65B9\u6CD5</th><th>\u4F5C\u7528</th></tr></thead><tbody><tr><td>sort</td><td>\u6392\u5E8F</td></tr><tr><td>skip</td><td>\u8DF3\u8FC7</td></tr><tr><td>limit</td><td>\u9650\u5236</td></tr><tr><td>select</td><td>\u663E\u793A\u5B57\u6BB5</td></tr><tr><td>exect</td><td>\u6267\u884C</td></tr><tr><td>count</td><td>\u8BA1\u6570</td></tr><tr><td>distinct</td><td>\u53BB\u91CD</td></tr></tbody></table><blockquote><p>exec(\uFF09\u548C then()</p><p>\u4E24\u8005\u8FD4\u56DE\u7684\u90FD\u662F promise\u5BF9\u8C61 exec\u4E00\u822C\u7528\u4E8E\u72EC\u7ACB\u7684\u52A8\u4F5C\u4E00\u6B21\u6027\u6267\u884C\uFF0C then\u5219\u7528\u4E8E\u8FDE\u7EED\u6027\u7684\u52A8\u4F5C \u4ECE\u5176\u65B9\u6CD5\u540D\u4E5F\u53EF\u4EE5\u533A\u522B\u5B83\u4EEC\u7684\u7528\u6CD5\uFF0Cexec\u5C31\u662F\u6267\u884C\u7684\u610F\u601D\uFF0Cthen\u5C31\u662F\u7136\u540E\u600E\u4E48\u600E\u4E48\uFF0C exec\u548Cthen\u7684\u53C2\u6570\u662F\u6709\u6240\u4E0D\u540C\u7684\uFF0C\u524D\u8005\u662F callback(err,doc)\uFF0C\u540E\u8005\u5219\u662F resolved(doc),rejected(err)</p></blockquote><p>\u6848\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span> Schema<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6309test\u4ECE\u5C0F\u5230\u5927\u6392\u5E8F</span>
<span class="token comment">// 1\u662F\u5347\u5E8F\uFF0C-1\u662F\u964D\u5E8F</span>
stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u6309test\u4ECE\u5927\u5230\u5C0F\u6392\u5217</span>
stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string">&#39;-test&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u8DF3\u8FC71\u4E2A\uFF0C\u663E\u793A\u5176\u4ED6</span>
stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u663E\u793A2\u4E2A</span>
stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u663E\u793Aname\u3001grades\u5B57\u6BB5\uFF0C\u4E0D\u663E\u793Aid\u5B57\u6BB5</span>
stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&#39;name grades -id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u8DF3\u8FC7\u7B2C1\u4E2A\u540E\uFF0C\u53EA\u663E\u793A2\u4E2A\u6570\u636E\uFF0C\u6309\u7167grades\u7531\u5927\u5230\u5C0F\u6392\u5E8F\uFF0C\u4E14\u4E0D\u663E\u793Aid\u5B57\u6BB5</span>
stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token string">&#39;-grades&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&#39;-id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
  <span class="token operator">/</span><span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5C0F\u660E&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">grades</span><span class="token operator">:</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token literal-property property">v</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
     <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5C0F\u82B1&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">grades</span><span class="token operator">:</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">v</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token operator">/</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u663E\u793A\u96C6\u5408stuModel\u4E2D\u7684\u6587\u6863\u6570\u91CF</span>
stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>count</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span>
  <span class="token comment">//6</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// \u8FD4\u56DE\u96C6\u5408stuModel\u4E2D\u7684grades\u7684\u503C</span>
stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">distinct</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>distinct</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>distinct<span class="token punctuation">)</span>
  <span class="token comment">//[ 46, 52, 60, 76, 78, 94 ]</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br></div></div><h2 id="_6-\u6587\u6863\u66F4\u65B0" tabindex="-1"><a class="header-anchor" href="#_6-\u6587\u6863\u66F4\u65B0" aria-hidden="true">#</a> 6.\u6587\u6863\u66F4\u65B0</h2><h3 id="_6-1-update" tabindex="-1"><a class="header-anchor" href="#_6-1-update" aria-hidden="true">#</a> 6.1 update()</h3><ul><li><p>Model.update(conditions, doc, [options], [callback])</p></li><li><p>\u53C2\u6570</p><p>conditions\uFF1A\u67E5\u8BE2\u6761\u4EF6</p><p>doc\uFF1A\u9700\u8981\u4FEE\u6539\u7684\u6570\u636E\uFF08\u63D2\u5165\u7684\u6570\u636E\uFF09</p><p>[options]\uFF1A\u63A7\u5236\u9009\u9879</p><blockquote><p>safe (boolean)\uFF1A \u9ED8\u8BA4\u4E3Atrue\u3002\u5B89\u5168\u6A21\u5F0F\u3002 upsert (boolean)\uFF1A \u9ED8\u8BA4\u4E3Afalse\u3002\u5982\u679C\u4E0D\u5B58\u5728\u5219\u521B\u5EFA\u65B0\u8BB0\u5F55\u3002 multi (boolean)\uFF1A \u9ED8\u8BA4\u4E3Afalse\u3002\u662F\u5426\u66F4\u65B0\u591A\u4E2A\u67E5\u8BE2\u8BB0\u5F55\u3002 runValidators\uFF1A \u5982\u679C\u503C\u4E3Atrue\uFF0C\u6267\u884CValidation\u9A8C\u8BC1\u3002 setDefaultsOnInsert\uFF1A \u5982\u679Cupsert\u9009\u9879\u4E3Atrue\uFF0C\u5728\u65B0\u5EFA\u65F6\u63D2\u5165\u6587\u6863\u5B9A\u4E49\u7684\u9ED8\u8BA4\u503C\u3002 strict (boolean)\uFF1A \u4EE5strict\u6A21\u5F0F\u8FDB\u884C\u66F4\u65B0\u3002 overwrite (boolean)\uFF1A \u9ED8\u8BA4\u4E3Afalse\u3002\u7981\u7528update-only\u6A21\u5F0F\uFF0C\u5141\u8BB8\u8986\u76D6\u8BB0\u5F55\u3002</p></blockquote></li><li><p>[callback]\uFF1A\u56DE\u8C03\u51FD\u6570</p></li><li><p>\u82E5\u8BBE\u7F6E\u4E86\u67E5\u8BE2\u6761\u4EF6\uFF0C\u5F53\u6570\u636E\u5E93\u4E0D\u6EE1\u8DB3\u65F6\u9ED8\u8BA4\u4EC0\u4E48\u4E5F\u4E0D\u53D1\u751F</p></li><li><p>update() \u65B9\u6CD5\u4E2D\u7684\u56DE\u8C03\u51FD\u6570\u4E0D\u80FD\u7701\u7565\uFF0C\u5426\u5219\u6570\u636E\u4E0D\u4F1A\u66F4\u65B0\uFF0C\u5F53\u56DE\u8C03\u65E0\u6709\u7528\u4FE1\u606F\u65F6\u53EF\u4EE5\u4F7F\u7528exec()\u7B80\u5316</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>stuModel<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u5C0F\u660E&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token number">34</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>\u6848\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u7B2C\u4E00\u6B65\uFF0C\u5F15\u5165mongoose</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
<span class="token comment">//\u7B2C\u4E8C\u6B65\uFF0C\u8FDE\u63A5\u6570\u636E\u5E93</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">//\u7B2C\u4E09\u6B65\uFF0C\u521B\u5EFA\u6A21\u677F</span>
    <span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token comment">// var Schema = new Schema()</span>
    <span class="token comment">//\u7B2C\u56DB\u6B65\uFF0C\u5C06\u6A21\u677F\u6620\u5C04\u5230\u96C6\u5408\u5E76\u521B\u5EFA</span>
    <span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span>Schema<span class="token punctuation">)</span>

    <span class="token comment">//\u67E5\u8BE2name\u4E3A\u5C0F\u660E\u7684\u6570\u636E\uFF0C\u5E76\u5C06\u5176test\u66F4\u6539\u4E3A34</span>
    <span class="token comment">//\u82E5\u6709\u591A\u4E2A\u6587\u6863\uFF0C\u9ED8\u8BA4\u53EA\u66F4\u65B0\u7B2C\u4E00\u4E2A</span>
    stuModel<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u5C0F\u660E&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token number">34</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>raw</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
      
     <span class="token comment">//{ n: 1, nModified: 1, ok: 1 }</span>
	 <span class="token comment">//6017befb5c36d64d08b72576	\u5C0F\u660E	68	0	34</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br></div></div></li></ul><h3 id="_6-2-updateone" tabindex="-1"><a class="header-anchor" href="#_6-2-updateone" aria-hidden="true">#</a> 6.2 updateOne()</h3><ul><li><p>Model.updateOne(conditions, doc, [options], [callback])</p></li><li><p>\u4E0Eupdate()\u76F8\u4F3C\uFF0C\u552F\u4E00\u533A\u522B\u4E3AupdateOne() \u9ED8\u8BA4\u66F4\u65B0\u4E00\u4E2A\u6587\u6863\uFF0C\u5373\u4F7F\u8BBE\u7F6E{multi:true}\u4E5F\u65E0\u6CD5\u53EA\u66F4\u65B0\u4E00\u4E2A\u6587\u6863</p></li></ul><h3 id="_6-3-updatemany" tabindex="-1"><a class="header-anchor" href="#_6-3-updatemany" aria-hidden="true">#</a> 6.3 updateMany()</h3><ul><li><p>Model.updateMany(conditions, doc, [options], [callback])</p></li><li><p>\u4E0Eupdate()\u76F8\u4F3C\uFF0C\u552F\u4E00\u533A\u522B\u4E3AupdateMany() \u9ED8\u8BA4\u66F4\u65B0\u591A\u4E2A\u6587\u6863\uFF0C\u5373\u4F7F\u8BBE\u7F6E{multi:false}\u4E5F\u65E0\u6CD5\u53EA\u66F4\u65B0\u4E00\u4E2A\u6587\u6863</p></li></ul><h3 id="_6-4-find-save" tabindex="-1"><a class="header-anchor" href="#_6-4-find-save" aria-hidden="true">#</a> 6.4 find()+save()</h3><p>\u7528\u4E8E\u590D\u6742\u66F4\u65B0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
     <span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span>Schema<span class="token punctuation">)</span>
	
     <span class="token comment">//\u67E5\u8BE2\u6210\u7EE9\u5C0F\u4E8E60\u7684\u6570\u636E\uFF0C\u5E76\u5728\u5176\u540D\u5B57\u540E\u6DFB\u52A0\u2018\uFF1A\u5DEE\u751F\u2019\u5B57\u6BB5</span>
     stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">grades</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$lt</span><span class="token operator">:</span><span class="token number">60</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">/*[{test: 0,_id: 6017c455ba09d355a49ec8eb,name: &#39;\u5C0F\u7EA2&#39;,grades: 52,__v: 0},
        {test: 0,_id: 6017c455ba09d355a49ec8ec,name: &#39;\u5C0F\u521A&#39;,grades: 46,__v: 0}]*/</span>
      
      docs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        item<span class="token punctuation">.</span>name <span class="token operator">+=</span> <span class="token string">&#39;\uFF1A\u5DEE\u751F&#39;</span>
        <span class="token comment">//\u5C06\u4FEE\u6539\u540E\u7684\u6570\u636E\u4FDD\u5B58</span>
        item<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
      <span class="token comment">/*[{test: 0,_id: 6017c455ba09d355a49ec8eb,name: &#39;\u5C0F\u7EA2\uFF1A\u5DEE\u751F&#39;,grades: 52,__v: 0},
        {test: 0,_id: 6017c455ba09d355a49ec8ec,name: &#39;\u5C0F\u521A\uFF1A\u5DEE\u751F&#39;,grades: 46,__v: 0}]*/</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div><h3 id="_6-5-findone-save" tabindex="-1"><a class="header-anchor" href="#_6-5-findone-save" aria-hidden="true">#</a> 6.5 findOne() + save()</h3><ul><li>\u7528\u4E8E\u590D\u6742\u66F4\u65B0</li><li>findOne()\u8FD4\u56DE\u503C\u4E3A\u6587\u6863\u5BF9\u8C61</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
     <span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span>Schema<span class="token punctuation">)</span>
	
     <span class="token comment">//\u67E5\u8BE2\u6210\u7EE9\u5C0F\u4E8E60\u7684\u6570\u636E\uFF0C\u5E76\u5728\u5176\u540D\u5B57\u540E\u6DFB\u52A0\u2018\uFF1A\u5DEE\u751F\u2019\u5B57\u6BB5</span>
     stuModel<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u5C0F\u660E&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token comment">//{test: 34,_id: 6017c455ba09d355a49ec8eb,name: &#39;\u5C0F\u660E&#39;,grades: 68,__v: 0},</span>
      doc<span class="token punctuation">.</span>age <span class="token operator">+=</span> <span class="token number">10</span>
      doc<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">)</span>
      <span class="token comment">//{test: 34,_id: 6017c455ba09d355a49ec8eb,name: &#39;\u5C0F\u660E&#39;,grades: 78,__v: 0}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_6-6-fingoneandupdate" tabindex="-1"><a class="header-anchor" href="#_6-6-fingoneandupdate" aria-hidden="true">#</a> 6.6 fingOneAndUpdate()</h3><p>Model.findOneAndUpdate([conditions], [update], [options], [callback])</p><h3 id="_6-7-findbyidandupdate" tabindex="-1"><a class="header-anchor" href="#_6-7-findbyidandupdate" aria-hidden="true">#</a> 6.7 findByIdAndUpdate()</h3><p>Model.findByIdAndUpdate([conditions], [update], [options], [callback])</p><h2 id="_7-\u6587\u6863\u5220\u9664" tabindex="-1"><a class="header-anchor" href="#_7-\u6587\u6863\u5220\u9664" aria-hidden="true">#</a> 7.\u6587\u6863\u5220\u9664</h2><h3 id="_7-1-deleteone" tabindex="-1"><a class="header-anchor" href="#_7-1-deleteone" aria-hidden="true">#</a> 7.1 deleteOne()</h3><ul><li>\u4F1A\u5220\u9664\u7B26\u5408\u6761\u4EF6\u7684\u6240\u6709\u6570\u636E</li><li>Model\u7684deleteOne\uFF08\uFF09</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
     <span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span>Schema<span class="token punctuation">)</span>
     <span class="token comment">//\u5220\u9664\u540D\u5B57\u4E2D\u5305\u542B\u2018\u5DEE\u751F\u2019\u7684\u6570\u636E</span>
	 stuModel<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\u5DEE\u751F</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
     <span class="token comment">// \u56DE\u8C03\u51FD\u6570\u4E0D\u80FD\u7701\u7565\uFF0C\u4F46\u53EF\u4EE5\u4F7F\u7528exec() \u7B80\u5199</span>
     <span class="token comment">//stuModel.deleteOne({name:/\u5DEE\u751F/}).exec()</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><ul><li>\u6587\u6863\u7684deleteOne\uFF08\uFF09</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">,</span><span class="token parameter">err</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
     <span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
     <span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span>Schema<span class="token punctuation">)</span>
     <span class="token comment">//\u5220\u9664\u540D\u5B57\u4E2D\u5305\u542B\u2018\u5DEE\u751F\u2019\u7684\u6570\u636E</span>
	 stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\u5DEE\u751F</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
         docs<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">item<span class="token punctuation">,</span>index<span class="token punctuation">,</span>arr</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
             item<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
                 <span class="token comment">//doc\u4E3A\u88AB\u5220\u9664\u7684\u503C</span>
                 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
             <span class="token punctuation">}</span><span class="token punctuation">)</span>
         <span class="token punctuation">}</span><span class="token punctuation">)</span>
     <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h3 id="_7-2-findoneandremove" tabindex="-1"><a class="header-anchor" href="#_7-2-findoneandremove" aria-hidden="true">#</a> 7.2 findOneAndRemove()</h3><ul><li><p>\u5220\u9664\u7B26\u5408\u6761\u4EF6\u7684\u4E00\u6761\u6570\u636E</p></li><li><p>Model.findOneAndRemove(conditions, [options], [callback])</p></li><li><p>\u56DE\u8C03\u4E0D\u53EF\u7701\u7565\uFF0C\u4F46\u53EF\u4EE5\u4F7F\u7528exec() \u7B80\u5199</p></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>stuModel<span class="token punctuation">.</span><span class="token function">findOneAndRemove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\u5DEE\u751F</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="_7-3-findbyidandremove" tabindex="-1"><a class="header-anchor" href="#_7-3-findbyidandremove" aria-hidden="true">#</a> 7.3 findByIdAndRemove()</h3><ul><li>\u901A\u8FC7id\u5220\u9664\u6570\u636E\uFF08id\u662F\u552F\u4E00\u7684\uFF09</li><li>Model.findByIdAndRemove(conditions, [options], [callback])</li><li>\u56DE\u8C03\u4E0D\u53EF\u7701\u7565\uFF0C\u4F46\u53EF\u4EE5\u4F7F\u7528exec() \u7B80\u5199</li></ul><h2 id="_8-\u524D\u540E\u94A9\u5B50" tabindex="-1"><a class="header-anchor" href="#_8-\u524D\u540E\u94A9\u5B50" aria-hidden="true">#</a> 8.\u524D\u540E\u94A9\u5B50</h2><ul><li><p>\u524D\u540E\u94A9\u5B50\u5373 pre() \u548C post() \u65B9\u6CD5\uFF08\u4E2D\u95F4\u4EF6\uFF09</p></li><li><p>\u4E2D\u95F4\u4EF6\u5728schema\u4E0A\u6307\u5B9A\uFF0C\u7C7B\u4F3C\u9759\u6001\u65B9\u6CD5\u6216\u5B9E\u4F8B\u65B9\u6CD5\u7B49</p></li><li><p>\u53EF\u4EE5\u5728\u6267\u884C\u4EE5\u4E0B\u64CD\u4F5C\u65F6\u8BBE\u7F6E\u524D\u540E\u94A9\u5B50</p><blockquote><p>init validate save remove count find findOne findOneAndRemove findOneAndUpdate insertMany update</p></blockquote></li><li><p>\u3010pre()\u3011\uFF1A\u5728\u6267\u884C\u67D0\u4E9B\u64CD\u4F5C\u524D\u6267\u884C</p></li><li><p>\u3010post\u3011\uFF1A\u5728\u6267\u884C\u67D0\u4E9B\u64CD\u4F5C\u524D\u540E\u6267\u884C\uFF0C\u4E0D\u53EF\u4EE5\u4F7F\u7528next()</p></li></ul><p>\u6848\u4F8B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">grades</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token literal-property property">test</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span><span class="token keyword">default</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Schema<span class="token punctuation">.</span><span class="token function">pre</span><span class="token punctuation">(</span><span class="token string">&#39;find&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u662Fpre\u65B9\u6CD51&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Schema<span class="token punctuation">.</span><span class="token function">pre</span><span class="token punctuation">(</span><span class="token string">&#39;find&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u662Fpre\u65B9\u6CD52&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Schema<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;find&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">docs</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u662Fpost\u65B9\u6CD51&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Schema<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;find&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">docs</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6211\u662Fpost\u65B9\u6CD52&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
<span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;grades&#39;</span><span class="token punctuation">,</span> Schema<span class="token punctuation">)</span><span class="token punctuation">;</span>
stuModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>docs</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>docs<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>    
<span class="token comment">/*
\u6211\u662Fpre\u65B9\u6CD51
\u6211\u662Fpre\u65B9\u6CD52
\u6211\u662Fpost\u65B9\u6CD51
\u6211\u662Fpost\u65B9\u6CD52
{test: 34, _id: 6017befb5c36d64d08b72576,name: &#39;\u5C0F\u660E&#39;,grades: 78,__v: 0}
*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br></div></div><h2 id="_9-\u6587\u6863\u9A8C\u8BC1" tabindex="-1"><a class="header-anchor" href="#_9-\u6587\u6863\u9A8C\u8BC1" aria-hidden="true">#</a> 9.\u6587\u6863\u9A8C\u8BC1</h2><ul><li>\u4FDD\u8BC1\u4FDD\u5B58\u6587\u6863\u65F6\uFF0C\u53EF\u4EE5\u6309\u7167Schema\u8BBE\u7F6E\u7684\u5B57\u6BB5\u8FDB\u884C\u8BBE\u7F6E</li></ul><h3 id="_9-1-\u3010required\u3011-\u6570\u636E\u5FC5\u586B" tabindex="-1"><a class="header-anchor" href="#_9-1-\u3010required\u3011-\u6570\u636E\u5FC5\u586B" aria-hidden="true">#</a> 9.1 \u3010required\u3011\uFF1A\u6570\u636E\u5FC5\u586B</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5C06name\u8BBE\u7F6E\u4E3A\u5FC5\u586B\u5B57\u6BB5\uFF0C\u5982\u679C\u6CA1\u6709name\u5B57\u6BB5\uFF0C\u6587\u6863\u5C06\u4E0D\u88AB\u4FDD\u5B58\uFF0C\u4E14\u51FA\u73B0\u9519\u8BEF\u63D0\u793A</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
    <span class="token literal-property property">required</span><span class="token operator">:</span><span class="token boolean">true</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span>Number
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;students&#39;</span><span class="token punctuation">,</span> Schema<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">stuModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//\u62A5\u9519\uFF1Aname: Path \`name\` is required.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_9-2-\u3010default\u3011-\u9ED8\u8BA4\u503C" tabindex="-1"><a class="header-anchor" href="#_9-2-\u3010default\u3011-\u9ED8\u8BA4\u503C" aria-hidden="true">#</a> 9.2 \u3010default\u3011\uFF1A\u9ED8\u8BA4\u503C</h3><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u8BBE\u7F6Eage\u5B57\u6BB5\u7684\u9ED8\u8BA4\u503C\u4E3A18\uFF0C\u5982\u679C\u4E0D\u8BBE\u7F6Eage\u5B57\u6BB5\uFF0C\u5219\u4F1A\u53D6\u9ED8\u8BA4\u503C</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>
    <span class="token keyword">default</span><span class="token operator">:</span><span class="token number">18</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;students&#39;</span><span class="token punctuation">,</span> Schema<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">stuModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u674E\u96F7&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//{ age: 18, _id: 6018f3bd7e51343e6c4f212b, name: &#39;\u674E\u96F7&#39;, __v: 0 }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h3 id="_9-3-\u3010min\u3011\u3010max\u3011-\u6700\u5C0F-\u5927\u503C" tabindex="-1"><a class="header-anchor" href="#_9-3-\u3010min\u3011\u3010max\u3011-\u6700\u5C0F-\u5927\u503C" aria-hidden="true">#</a> 9.3 \u3010min\u3011\u3010max\u3011\uFF1A\u6700\u5C0F/\u5927\u503C</h3><ul><li>\u53EA\u9002\u7528\u4E8E\u6570\u5B57</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5C06age\u7684\u53D6\u503C\u8303\u56F4\u8BBE\u7F6E\u4E3A[0,10]\u3002\u5982\u679Cage\u53D6\u503C\u4E3A20\uFF0C\u6587\u6863\u5C06\u4E0D\u88AB\u4FDD\u5B58\uFF0C\u4E14\u51FA\u73B0\u9519\u8BEF\u63D0\u793A</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>
    <span class="token literal-property property">min</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span>
    <span class="token literal-property property">max</span><span class="token operator">:</span><span class="token number">18</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;students&#39;</span><span class="token punctuation">,</span> Schema<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">stuModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u674E\u96F7&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//age: Path \`age\` (20) is more than maximum allowed value (18).</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h3 id="_9-4-\u3010match\u3011-\u6B63\u5219\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#_9-4-\u3010match\u3011-\u6B63\u5219\u5339\u914D" aria-hidden="true">#</a> 9.4 \u3010match\u3011\uFF1A\u6B63\u5219\u5339\u914D</h3><ul><li>\u53EA\u9002\u7528\u4E8E\u5B57\u7B26\u4E32</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5C06name\u7684match\u8BBE\u7F6E\u4E3A\u5FC5\u987B\u5B58\u5728&#39;01&#39;\u5B57\u7B26\u3002\u5982\u679Cname\u4E0D\u5B58\u5728&#39;01&#39;\uFF0C\u6587\u6863\u5C06\u4E0D\u88AB\u4FDD\u5B58\uFF0C\u4E14\u51FA\u73B0\u9519\u8BEF\u63D0\u793A</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">match</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">01</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;students&#39;</span><span class="token punctuation">,</span> Schema<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">stuModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;\u674E\u96F7&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//name: Path \`name\` is invalid (\u674E\u96F7).</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_9-5\u3010enum\u3011-\u679A\u4E3E\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#_9-5\u3010enum\u3011-\u679A\u4E3E\u5339\u914D" aria-hidden="true">#</a> 9.5\u3010enum\u3011\uFF1A\u679A\u4E3E\u5339\u914D</h3><ul><li>\u53EA\u9002\u7528\u4E8E\u5B57\u7B26\u4E32</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5C06name\u7684\u679A\u4E3E\u53D6\u503C\u8BBE\u7F6E\u4E3A[&#39;zs&#39;,&#39;ls&#39;,&#39;ww&#39;]\uFF0C\u5982\u679Cname\u4E0D\u5728\u679A\u4E3E\u8303\u56F4\u5185\u53D6\u503C\uFF0C\u6587\u6863\u5C06\u4E0D\u88AB\u4FDD\u5B58\uFF0C\u4E14\u51FA\u73B0\u9519\u8BEF\u63D0\u793A</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token keyword">enum</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;zs&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;ls&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;ww&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;students&#39;</span><span class="token punctuation">,</span> Schema<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">stuModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;lss&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//name: ValidatorError: \`lss\` is not a valid enum value for path \`name\`.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h3 id="_9-6-\u3010validate\u3011-\u81EA\u5B9A\u4E49\u5339\u914D" tabindex="-1"><a class="header-anchor" href="#_9-6-\u3010validate\u3011-\u81EA\u5B9A\u4E49\u5339\u914D" aria-hidden="true">#</a> 9.6 \u3010validate\u3011\uFF1A\u81EA\u5B9A\u4E49\u5339\u914D</h3><ul><li>validate\u5B9E\u9645\u4E0A\u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u51FD\u6570\u7684\u53C2\u6570\u4EE3\u8868\u5F53\u524D\u5B57\u6BB5\uFF0C\u8FD4\u56DEtrue\u8868\u793A\u901A\u8FC7\u9A8C\u8BC1\uFF0C\u8FD4\u56DEfalse\u8868\u793A\u672A\u901A\u8FC7\u9A8C\u8BC1</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u5B9A\u4E49\u540D\u5B57name\u7684\u957F\u5EA6\u5FC5\u987B\u57284\u4E2A\u5B57\u7B26\u4EE5\u4E0A</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://localhost:27017/student&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> Schema <span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span><span class="token literal-property property">validate</span><span class="token operator">:</span>nameLength<span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">age</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> stuModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;students&#39;</span><span class="token punctuation">,</span> Schema<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">new</span> <span class="token class-name">stuModel</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;abcd&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>doc</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>doc<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">nameLength</span><span class="token punctuation">(</span><span class="token parameter">arg</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span>arg<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

<span class="token comment">//name: Validator failed for path \`name\` with value \`abcd\`</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br></div></div>`,109);function t(e,o){return p}var l=n(a,[["render",t],["__file","12 \u3010\u64CD\u4F5Cmongodb\u6570\u636E\u5E93\u3011.html.vue"]]);export{l as default};
